There is a production deployment planned for next week. The Nautilus DevOps team wants to test the deployment update and rollback on Dev environment first so that they can identify the risks in advance. Below you can find more details about the plan they want to execute.



Create a namespace devops. Create a deployment called httpd-deploy under this new namespace, It should have one container called httpd, use httpd:2.4.28 image and 4 replicas. The deployment should use RollingUpdate strategy with maxSurge=1, and maxUnavailable=2. Also create a NodePort type service named httpd-service and expose the deployment on nodePort: 30008.


Now upgrade the deployment to version httpd:2.4.43 using a rolling update.


Finally, once all pods are updated undo the recent update and roll back to the previous/original version.


Note:

a. The kubectl utility on jump_host has been configured to work with the kubernetes cluster.


b. Please make sure you only use the specified image(s) for this deployment and as per the sequence mentioned in the task description. If you mistakenly use a wrong image and fix it later, that will also distort the revision history which can eventually fail this task.

Ans)
    ## Log into the jump_host 
    1. ssh thor@jump_host

    ## create a devops namespace
    2. kubectl create ns devops

    ## Check whether the namespace is created or not
    3. kubectl get ns

    ## Write httpd-deploy.yaml file for creating the httpd-deployment
    4. vi httpd-deploy.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          creationTimestamp: null
          labels:
            app: httpd-deploy
          name: httpd-deploy
          namespace: devops
        spec:
          replicas: 4
          selector:
            matchLabels:
              app: httpd-deploy
          strategy:
            type: RollingUpdate
            rollingUpdate:
              maxSurge: 1
              maxUnavailable: 2
          template:
            metadata:
              creationTimestamp: null
              labels:
                app: httpd-deploy
            spec:
              containers:
              - image: httpd:2.4.28
                name: httpd
                ports:
                - containerPort: 80
                resources: {}
        status: {}

    ## Apply the httpd-deploy.yaml file to create the httpd-deployment
    5. kubectl apply -f httpd-deploy.yaml

    ## Write the httpd-service.yaml file for creating httpd-service
    6. vi httpd-service.yaml
        
        apiVersion: v1
        kind: Service
        metadata:
          name: httpd-service
          namespace: devops
        spec:
          type: NodePort
          selector:
            app: httpd-deploy
          ports:
            - port: 80
              targetPort: 80
              nodePort: 30008

    ## Apply the httpd-service.yaml file to create the httpd-service 
    7. kubectl apply -f httpd-service.yaml

    ## Check whether httpd-deployment and Service is created and running successfully or not
    8. kubectl get all -n devops
       once you confirmed all the resource are created successfully and running. Try to access the app with node port 30008
       if the web application is accessed. Then deployment is successfully.

    ## Upgrade the deployment to version httpd:2.4.43 using a rolling update.
    9. kubectl set image deployment/httpd-deploy httpd=httpd:2.4.43 -n devops
       
    ## Check the rollout history
    10. kubectl rollout history deployment/httpd-deploy -n devops 
        we can see two revision here and current deployment is in revision 2
    
    ## Check whether httpd-deployment running successfully or not after upgrading
    11. kubectl get deployment -n devops
        Once all the pods are up and running. We need to check whether web server is accessiable or not by take node Ip and the nodeport 30008

    ## Rollback to the previous/original version.
    12. kubectl rollout undo deployment/httpd-deploy -n devops

    ## Check the rollout history
    13. kubectl rollout history deployment/httpd-deploy -n devops 
        we can see three revision here and current deployment is in revision 3

    ## Check whether httpd-deployment running successfully or not after Rollback
    14. kubectl get deployment -n devops
        Once all the pods are up and running. We need to check whether web server is accessiable or not by take node IP and the nodeport 30008

    