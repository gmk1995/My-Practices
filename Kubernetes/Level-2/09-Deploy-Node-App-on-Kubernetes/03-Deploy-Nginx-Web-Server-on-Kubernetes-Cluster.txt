Some of the Nautilus team developers are developing a static website and they want to deploy it on Kubernetes cluster. They want it to be highly available and scalable. Therefore, based on the requirements, the DevOps team has decided to create a deployment for it with multiple replicas. Below you can find more details about it:


Create a deployment using nginx image with latest tag only and remember to mention the tag i.e nginx:latest. Name it as nginx-deployment. The container should be named as nginx-container, also make sure replica counts are 3.

Create a NodePort type service named nginx-service. The nodePort should be 30011.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

Ans)
    ## Log into the jump_host 
    1. ssh thor@jump_host

    ## Write nginx-deployment.yaml file 
    2. 
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          creationTimestamp: null
          labels:
            app: nginx-deployment
          name: nginx-deployment
        spec:
          replicas: 3
          selector:
            matchLabels:
              app: nginx-deployment
          strategy: {}
          template:
            metadata:
              creationTimestamp: null
              labels:
                app: nginx-deployment
            spec:
              containers:
              - image: nginx:latest
                name: nginx-container
                ports:
                  - containerPort: 80
                resources: {}
        status: {}

    ## Apply the nginx-deployment.yaml file to create the nginx deployment 
    3. kubectl apply -f nginx-deployment.yaml

    ## Write nginx-service.yaml file to create the service to expose the nginx deployment
    4. 
        apiVersion: v1
        kind: Service
        metadata:
          name: nginx-service
        spec:
          type: NodePort
          selector:
            app: nginx-deployment
          ports:
          - port: 80
            targetPort: 80
            nodePort: 30011

    ## Apply the nginx-service.yaml file to create the nginx-service
    5. kubectl apply -f nginx-service.yaml

    ## Check Deployment and Service are running or not 
    6. kubectl get all 
       If pods are up and running we can take the node ip and browse the nginx web server using port number 30011 