Linux Questions:

1) Create a user named ammar with a non-interactive shell on the App Server 3

Ans) use -s for shell and set shell to /sbin/nologin useradd ammar -s /sbin/nologin

2) Please give executable permissions to /tmp/xfusioncorp.sh script on App Server 1. Also make sure every user can execute it.

Ans) sudo chmod -R 777 /tmp/xfusioncorp.sh

3) During the daily standup, it was pointed out that the timezone across Nautilus Application Servers in Stratos Datacenter doesn't match with that of the local datacenter's timezone, which is America/Managua. Correct the mismatch.

Ans) run sudo timedatectl to check the timezone
sudo timedatectl set-timezone America/Managua

4) The Nautilus system admins team has prepared scripts to automate several day-to-day tasks. They want them to be deployed on all app servers in Stratos DC on a set schedule. Before that they need to test similar functionality with a sample cron job. Therefore, perform the steps below:

a. Install cronie package on all Nautilus app servers and start crond service.

b. Add a cron */5 * * * * echo hello > /tmp/cron_text for root user.

Ans) Log into application servers using "ssh username@ipaddress/hostname"
      >> check the which Linux Flavour is Installed by running the command " sudo cat /etc/os-release
      >> Once you confirm the os version check the package is available or not by running " sudo yum search cronie or apt search cronie "
      >> Once Package is available you can run the following commands to install the Squid Package by running the command " sudo yum install cronie -y or sudo apt install cronie -y "
      >> Once the Package is installed sucessfully you need to restart the service to run in the background " sudo systemctl restart crond "
      >> Check the status of the cronie service by running the below command " sudo systemctl status crond "
      >> To Add a cronjob you need run the below command " crontab -e -u root "
      >> It will open a vi editor you need to paste the above cronjob " */5 * * * * echo hello > /tmp/cron_text " and save the file
      >> To verify that the cron job has been added successfully, type the following command " crontab -l -u root "
      
5)  The backup server in the Stratos DC contains several template XML files used by the Nautilus application. However, these template XML files must be populated with valid data before they can be used. One of the daily tasks of a system admin working in the xFusionCorp industries is to apply string and file manipulation commands!

      Replace all occurances of the string Sample to Maritime on the XML file /root/nautilus.xml located in the backup server.

Ans) We can use the command sed -i 's/Sample/Maritime/g' /root/nautilus.xml

6)  There is some data on Nautilus App Server 1 in Stratos DC. Data needs to be altered in several of the files. On Nautilus App Server 1, alter the /home/BSD.txt file as per details given below:

a. Delete all lines containing word copyright and save results in /home/BSD_DELETE.txt file. (Please be aware of case sensitivity)

b. Replace all occurrence of word and to is and save results in /home/BSD_REPLACE.txt file.

Note: Let's say you are asked to replace word to with from. In that case, make sure not to alter any words containing this string; for example upto, contributor etc.

Ans) Log into application servers using "ssh username@ipaddress/hostname"
      >> Create BSD_DELETE.txt BSD_REPLACE.txt on /home directory by running the command " sudo touch BSD_DELETE.txt BSD_REPLACE.txt " and provide read,write,execute permissions by running the command " sudo chmod 777 BSD_DELETE.txt BSD_REPLACE.txt ".
      >> Use the Command " sudo grep -v copyright  /home/BSD.txt > /home/BSD_DELETE.txt
      >> Use the Command " sudo sed 's/\band\b/is/g' /home/BSD.txt > /home/BSD_REPLACE.txt

7)  create a user named ravi on the App Server 1. Set expiry date to 2021-04-15 in Stratos Datacenter. Make sure the user is created as per standard and is in lowercase.

Ans) Log into application servers using "ssh username@ipaddress/hostname"
      >> Once you log into the App Server 1 you need to run the below command " sudo useradd -m -e 2021-04-15 ravi "
      >> -m = create the user's home directory
      >> -e = expiration date of the new account

8) On App Server 1 find all files (not directories) owned by user jim inside /home/usersdata directory and copy them all while keeping the folder structure (preserve the directories path) to /beta directory.

Ans) Log into App Server1 using "ssh username@ipaddress/hostname"
      >> Once you log into App Server 1 you need to check whether the files with jim user name are there or not by moving to the " /home/usersdata " directory.
      >> Once you confirm back the user home directory by running the command " cd ~ " 
      >> To copy jim user files inside /home/usersdata directory  and to keep the folder structure you need to run the below command " sudo find /home/usersdata -type f -user jim -exec cp --parents {} /beta \;
      >> This command finds all files owned by user "jim" inside the /home/usersdata directory on App Server 1, using the find command with the following options:
          ** -type f: Find only files, not directories.
          ** -user jim: Find files owned by the user "jim".
          ** -exec cp --parents {} /beta \;: Execute the cp command on each file found, copying the file to the /beta directory while preserving the directory structure.
          ** The cp command with the --parents option is used to preserve the directory structure when copying files. Each file will be copied to the /beta directory with its original directory path preserved. You may need to run this command with sudo or as the root user.

9) Update the message of the day on all application and db servers for Nautilus. Make use of the approved template located at /home/thor/nautilus_banner on jump host.

Ans) Check the motd file available or not in Jump Sever directory /home/thor/nautilus_banner
       >> Once you confirm /home/thor/nautilus_banner file is available you need to copy the files to App Servers by running the command " scp /home/thor/nautilus_banner username@hostname:/tmp "
       >> Log into application servers using "ssh username@ipaddress/hostname" and move the "nautilus_banner" file to "/etc/motd" file by running the command " mv /tmp/nautilus_banner /etc/motd"
       >> Open the "etc/profile" by running the command " sudo vi etc/profile " and add the " cat /etc/motd "
             
10) As per details shared by the development team, the new application release has some dependencies on the back end. There are some packages/services that need to be installed on all app servers under Stratos Datacenter. As per requirements please perform the following steps:

a. Install squid package on all the application servers.

b. Once installed, make sure it is enabled to start during boot.

Ans) Log into application servers using "ssh username@ipaddress/hostname"
      >> check the which Linux Flavour is Installed by running the command " sudo cat /etc/os-release
      >> Once you confirm the os version check the package is available or not by running " sudo yum search squid or apt search squid "
      >> Once Package is available you can run the following commands to install the Squid Package by running the command " sudo yum install squid -y or sudo apt install squid -y "
      >> Once the Package is installed sucessfully you need to enable the services by running the command " sudo systemctl enable squid "
      >> Once you enable the squid service you need to restart the service to run in the background " sudo systemctl restart squid "
      >> Check the status of the squid service by running the below command " sudo systemctl status squid "

11) Copy the file from Jump Server to App Server 1 

Ans) Check the file is available or not in the Jump Server.
      >> Use the following command to copy the file from Jump Server to App Server 1 " scp /tmp/file1 tony@stapp01:/home/app "
      >> Log into App Server 1 to check whether you files is copied successfully or not. 

12) The system admins team of xFusionCorp Industries has noticed intermittent issues with DNS resolution in several apps . App Server 1 in Stratos Datacenter is having some DNS resolution issues, so we want to add some additional DNS nameservers on this server.
As a temporary fix we have decided to go with Google public DNS (ipv4). Please make appropriate changes on this server.

Ans) Open the /etc/resolv.conf file with a text editor (e.g., nano or vi).

Add the following line at the top of the file:
nameserver 8.8.8.8
This adds Google public DNS (IPv4) as the first DNS nameserver to use.
Save and close the file.
Restart the network service to apply the changes:
sudo systemctl restart network
Alternatively, you can reboot the server to ensure that the changes take effect after the reboot:
sudo reboot
Note: The changes made in /etc/resolv.conf are not persistent across reboots. You may need to modify the appropriate configuration file for your Linux distribution to make the changes persistent. For example, on CentOS/RHEL, you can modify the PEERDNS setting in the network configuration file (/etc/sysconfig/network-scripts/ifcfg-<interface>) to ensure that the additional DNS nameserver is added after reboot.

13) After doing some security audits of servers, xFusionCorp Industries security team has implemented some new security policies. One of them is to disable direct root login through SSH.

Disable direct SSH root login on all app servers in Stratos Datacenter.

Ans) Log in to the app server as root.
      >> Edit the sshd_config file located in /etc/ssh/sshd_config using a text editor such as nano or vim.
      >> Find the line that says "PermitRootLogin yes" and change it to "PermitRootLogin no".
      >> Save the file and exit the editor.
      >> Restart the SSH service to apply the changes by running the following command: "systemctl restart sshd".
After completing these steps, the root user will no longer be able to log in directly through SSH. Instead, the security team should create a separate user account with administrative privileges and use that account to log in and perform administrative tasks. This will help to minimize the risk of unauthorized access and protect the servers from potential security threats.

14) Some users of the monitoring app have reported issues with xFusionCorp Industries mail server. They have a mail server in Stork DC where they are using postfix mail transfer agent. Postfix service seems to fail. Try to identify the root cause and fix it.

Ans) Log in to the mail server by using " ssh groot@stmail "
      >> Check the postfix status by running the command " systemctl status postfix " and check the error. 
      >> There is a error in this line on /etc/hosts ::1    localhost ip6-localhost ip6-loopback. I have uncommed this line #::1    localhost ip6-localhost ip6-loopback.
      >> Did systemctl enable postfix,  systemctl restart postfix and systemctl status postfix.
      >> postfix mail is working fie
15) New tools have been installed on the app server in Stratos Datacenter. Some of these tools can only be managed from the graphical user interface. Therefore, there are requirements for these app servers.
On all App servers in Stratos Datacenter change the default runlevel so that they can boot in GUI (graphical user interface) by default. Please do not try to reboot these servers.
Ans) Log inot App servers using "ssh username@hostname/ipaddress"
      >> Check /etc/inittab and see the configurations. 
      >> Run the command "sudo systemctl get-default" to check the default runlevel.
      >> If the above command is shown it was set to graphical.target, you need to set it as graphical.target.
      >> To set graphical.target you need to run the below command " sudo systemctl set-default graphical.target ".
      >> Run the command "sudo systemctl get-default" to check the default runlevel set to graphical.target or not, when yu\ou it wll show graphical.target. 
16) The system admin team of xFusionCorp Industries has noticed an issue with some servers in Stratos Datacenter where some of the servers are not in sync w.r.t time. Because of this, several application functionalities have been impacted. To fix this issue the team has started using common/standard NTP servers. They are finished with most of the servers except App Server 2. Therefore, perform the following tasks on this server:

Install and configure NTP server on App Server 2.

Add NTP server 3.south-america.pool.ntp.org in NTP configuration on App Server 2.

Please do not try to start/restart/stop ntp service, as we already have a restart for this service scheduled for tonight and we don't want these changes to be applied right now.

Ans) Log into the App Server 2 by using " ssh username@hostname/ipaddress
      >> Check the os flavor bby running the command " sudo /etc/os-release "
      >> Once os flavor is comfirmed you can run the command by using the preferred package manager " yum install ntp -y or suod apt install ntp -y "
      >> Open the ntp config by running the command " sudo vi /etc/ntp.conf"
      >> Add " 3.south-america.pool.ntp.org " on below lines " # Use public servers from the pool.ntp.org project.# Please consider joining the pool (http://www.pool.ntp.org/join.html) "
      >> As it mentioned we don't need to restart the ntp service.

17) The Nautilus team doesn't want its data to be accessed by any of the other groups/teams due to security reasons and want their data to be strictly accessed by the sysops group of the team.

Setup a collaborative directory /sysops/data on Nautilus App 2 server in Stratos Datacenter.

The directory should be group owned by the group sysops and the group should own the files inside the directory. The directory should be read/write/execute to the group owners, and others should not have any access.

Ans) Log into the App Server 2 by using the command " ssh username@hostname/ipaddress "
      >> Create the directory by running the command " sudo mkdir -pv /sysops/data "
      >> Change the Group to "sysops" by running the command " sudo chgrp -R sysops /sysops "
      >> Chnage the Group permission by running the command "  sudo chmod -R 770 /sysops "
      >> Set the default group ownership of any new files or directories created within the /sysops/data directory to sysops using the setgid bit
           " sudo chmod g+s /sysops/data "
      >> This sets the permission bits as follows: rwxrws---, where the setgid bit (s) has been added to the group permission bits (rws).   
18) The system admins team of xFusionCorp Industries has set up some scripts on jump host that run on regular intervals and perform operations on all app servers in Stratos Datacenter. To make these scripts work properly we need to make sure the thor user on jump host has password-less SSH access to all app servers through their respective sudo users (i.e tony for app server 1). Based on the requirements, perform the following:

Set up a password-less authentication from user thor on jump host to all app servers through their respective sudo users.

Ans) Log into the Jump Server by using the command " ssh username@hostname/IPaddress "
      >> Genrate the key from the jump server by running the command " ssh-keygen "
      >> Once the Key is genrated copy the public key to the all the app servers by running the command " ssh-copy-id user1@hostname/IPaddress, ssh-copy-id user2@hostname/IPaddress, ssh-copy-id user3@hostname/IPaddress  "
      >> It will ask the authorization to add the key on app server press "yes" after that you need to enter the app servers password for one time.
      >> Once the Password is entered the public key of jump server is added successfully in the "authorized_keys" on the user home directory " /home/user1/.ssh/authorized_keys".
      >> Now you can log into all the app servers without entering the password by running the command " ssh user1@hostname/IPaddress, ssh user2@hostname/IPaddress, ssh user3@hostname/IPaddress "
      
19) There is a critical issue going on with the Nautilus application in Stratos DC. The production support team identified that the application is unable to connect to the database. After digging into the issue, the team found that mariadb service is down on the database server.

Look into the issue and fix the same.

Ans) Log into the DB server using "ssh username@ipaddress/hostname"
      >> Once Log in to check the status of the mariadb is running or not by running the command " sudo systemctl status mariadb"
	>> If you get an error check the root cause by running the command " sudo journalctl -u mariadb.service" it will provide status.
	>> Check the log of the mariadb by running the command " sudo /var/log/mariadb/mariadb.log "
	>> Find the error in my case it is faling on " to permissions on the PID file for the MariaDB service. The error message says "Can't create/write to file '/var/run/mariadb/mariadb.pid' (Errcode: 13)" and "Can't start server: can't create PID file: Permission denied".
	>> I have checked " sudo ls -ld /var/run/mariadb" permissions, the mysql directory having user owned by root and group owned by mysql.
	>> I have changed the user to mysql by running the command " sudo chown mysql:mysql /var/run/mariadb "
	>> Restarted the mariadb service by running the command " sudo systemctl restart mariadb "
	>> It is successfully started.
	
20) The xFusionCorp Industries security team recently did a security audit of their infrastructure and came up with ideas to improve the application and server security. They decided to use SElinux for an additional security layer. They are still planning how they will implement it; however, they have decided to start testing with app servers, so based on the recommendations they have the following requirements:

Install the required packages of SElinux on App server 3 in Stratos Datacenter and disable it permanently for now; it will be enabled after making some required configuration changes on this host. Don't worry about rebooting the server as there is already a reboot scheduled for tonight's maintenance window. Also ignore the status of SElinux command line right now; the final status after reboot should be disabled

Ans) Log into the App Server 3 using the command " ssh username@hostname/Ipaddress " and login as a root user " sudo -i "
	  >> Check the selinux status by running the command " sestatus "
	  >> If selinux command is not installed run the command " yum install selinux-policy selinux-policy-targeted setools setools-console setroubleshoot -y "
	  >> As it is told to disable it we need to run the command " sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config " 
	  >> Run command " sestatus " check whether it is disabled or not. 
21) The system admins team of xFusionCorp Industries has set up a new tool on all app servers, as they have a requirement to create a service user account that will be used by that tool. They are finished with all apps except for App Server 3 in Stratos Datacenter.

Create a user named rose in App Server 3 without a home directory.

Ans) Log into App Server 3 using the command " ssh user3@hostname/IPaddress "
	  >> Run the command " sudo useradd -M rose "
	  >> Check if the rose  service user account added or not by running the command " sudo /etc/passwd "
	  >> Once you confirmed that check " /home " directory whether it have created any directory named " rose ".
	  >> If there is no " rose" directory in the "/home" directory, you have successfully created the service user account "rose" without home directory.

22) During a routine security audit, the team identified an issue on the Nautilus App Server. Some malicious content was identified within the website code. After digging into the issue they found that there might be more infected files. Before doing a cleanup they would like to find all similar files and copy them to a safe location for further investigation. Accomplish the task as per the following requirements:

a. On App Server 1 at location /var/www/html/ecommerce find out all files (not directories) having .js extension.

b. Copy all those files along with their parent directory structure to location /ecommerce on same server.

c. Please make sure not to copy the entire /var/www/html/ecommerce directory content.

Ans) Log into the app server 1 using the command " ssh username@hostname/IPaddress
		>> find /var/www/html/ecommerce -type f -name "*.js" -printf "%P\n" > /tmp/js_files.txt
		>> rsync -av --files-from=/tmp/js_files.txt /var/www/html/ecommerce /ecommerce/
		>> The find command now uses the -printf option to output the file paths without the leading directory (%P).
		>> In the rsync command, we remove the trailing slash from the source directory, and use the -R option to preserve the relative paths of the files. This should ensure that the files are copied with their parent directory structure intact.
		
Other Commands which will also useful:
--------------------------------------
		>> sudo find /home/usersdata -type f -user jim -exec cp --parents {} /beta \

		>> sudo find /var/www/html/ecommerce -type f -name "*.js" -exec sh -c 'mkdir -p "/ecommerce/$(dirname {})" && cp {} "/ecommerce/$(dirname {})"' \;

		>> sudo find /var/www/html/ecommerce -type f -name "*.js" -exec sh -c 'mkdir -p "/ecommerce$(dirname $(echo {} | sed "s|/var/www/html/ecommerce||"))" && cp {} "/ecommerce$(dirname $(echo {} | sed "s|/var/www/html/ecommerce||"))"' \;

		>> rsync -av --include='*/' --include='*.js' --exclude='*' /var/www/html/ecommerce/ /ecommerce/

		>> rsync -av --include '*/' --include '*.js' --exclude '*' /var/www/html/ecommerce/ /ecommerce/

23) We have a backup management application UI hosted on Nautilus's backup server in Stratos DC. That backup management application code is deployed under Apache on the backup server itself, and Nginx is running as a reverse proxy on the same server. Apache and Nginx ports are 8086 and 8092, respectively. We have iptables firewall installed on this server. Make the appropriate changes to fulfill the requirements mentioned below:

We want to open all incoming connections to Nginx's port and block all incoming connections to Apache's port. Also make sure rules are permanent.

Ans) To open all incoming connections to Nginx's port and block all incoming connections to Apache's port on your CentOS server, you can follow these steps:

First, check if iptables service is running on your system using the following command:


systemctl status iptables

If it is not running, you can start the iptables service using the following command:


systemctl start iptables
Then, list the existing iptables rules using the following command:

Copy code
iptables -L
This will show you the current firewall rules set on your server.

Identify the Apache and Nginx ports that need to be opened and closed. In this case, we need to open port 8092 for Nginx and block port 8086 for Apache.

To open port 8092 for Nginx, use the following command:


iptables -A INPUT -p tcp --dport 8092 -j ACCEPT
This command adds a rule to the INPUT chain to accept all incoming traffic on port 8092.

To block port 8086 for Apache, use the following command:


iptables -A INPUT -p tcp --dport 8086 -j DROP
This command adds a rule to the INPUT chain to drop all incoming traffic on port 8086.

Save the changes you made to iptables using the following command:


service iptables save

This command saves the current iptables rules to the configuration file, so they are applied automatically upon system boot.

Finally, verify that the rules have been set up correctly by running the following command:


iptables -L
This command should show the new rules you just added.

With these steps, you should have successfully opened all incoming connections to Nginx's port and blocked all incoming connections to Apache's port, while ensuring that the rules are permanent.

24) We have confidential data that needs to be transferred to a remote location, so we need to encrypt that data.We also need to decrypt data we received from a remote location in order to understand its content.

On storage server in Stratos Datacenter we have private and public keys stored /home/*_key.asc. Use those keys to perform the following actions.

Encrypt /home/encrypt_me.txt to /home/encrypted_me.asc.

Decrypt /home/decrypt_me.asc to /home/decrypted_me.txt. (Passphrase for decryption and encryption is kodekloud).

Ans) Log into the Storage Server by running command " ssh username@Ipaddress/hostname "
	>> Create "/home/encrypted_me.asc" "/home/decrypted_me.txt" files by running the command " sudo touch /home/encrypted_me.asc " and " sudo touch /home/decrypted_me.txt "
	>> Provide the permissions to the both files "/home/encrypted_me.asc , "/home/decrypted_me.txt" by running the command " sudo chmod 777 /home/encrypted_me.asc" and " sudo chmod 777 /home/decrypted_me.txt"
	>> To encrypt use this command " sudo gpg --symmetric --cipher-algo AES256 --output /home/encrypted_me.asc --passphrase kodekloud /home/encrypt_me.txt " It will ask password enter the password " kodekloud "
	>> To decrypt use this command " sudo gpg --passphrase kodekloud -d /home/decrypt_me.asc > /home/decrypted_me.txt. It will ask password enter the password " kodekloud ".
	
25) Update the package index and upgrade any existing packages:

Ans) Log into the app servers by running the command " ssh username@IPaddress/hostname "

sudo yum update

Install Tomcat package:

sudo yum install tomcat

This will install Tomcat and its dependencies on your system.

To configure log rotation for Tomcat on CentOS, you can follow these steps:

Install logrotate package:


sudo yum install logrotate

This will install the logrotate package on your system.

Create a logrotate configuration file for Tomcat:


sudo nano /etc/logrotate.d/tomcat
Add the following contents to the file:


/var/log/tomcat/*.log {
    monthly
    rotate 3
    compress
    delaycompress
    missingok
    notifempty
    create 640 tomcat tomcat
}
This configuration will rotate Tomcat logs on a monthly basis, keep only 3 rotated logs, compress the rotated logs, and create new empty logs with correct file permissions.

Save the file and exit the editor.

Test the logrotate configuration:

sudo logrotate -f /etc/logrotate.d/tomcat

This will force logrotate to rotate logs based on the configuration file you just created.

26) The Nautilus devops team got some requirements related to some Apache config changes. They need to setup some redirects for some URLs. There might be some more changes need to be done. Below you can find more details regarding that:

httpd is already installed on app server 3. Configure Apache to listen on port 8085.

Configure Apache to add some redirects as mentioned below:

a.) Redirect http://stapp03.stratos.xfusioncorp.com:<Port>/ to http://www.stapp03.stratos.xfusioncorp.com:<Port>/ i.e non www to www. This must be a permanent redirect i.e 301

b.) Redirect http://www.stapp03.stratos.xfusioncorp.com:<Port>/blog/ to http://www.stapp03.stratos.xfusioncorp.com:<Port>/news/. This must be a temporary redirect i.e 302


Ans) Log into the App Server 3 using the command " ssh username@IPaddress/HostName "
		>> Apache httpd server configurations will be in "/etc/httpd/conf/httpd.conf"
		>> Open the httpd.conf file to make the changes " sudo vi /etc/httpd/conf/httpd.conf "
		>> On the Listen Port Section change the Port to 8085.
		>> At the Last of Script add the below details
		
				<VirtualHost *:8085>
					ServerName stapp03.stratos.xfusioncorp.com
					Redirect permanent http://www.stapp03.stratos.xfusioncorp.com:8085/
				</VirtualHost>
				
				<VirtualHost *:8085>
					ServerName www.stapp03.stratos.xfusioncorp.com
					Redirect temp http://www.stapp03.stratos.xfusioncorp.com:8085/news/
				</VirtualHost>
				
		>> Restart the httpd service by running the command " sudo systemctl restart httpd "
		>> Check the status of the httpd server by running the command " sudo systemctl status httpd "
		>> If the httpd server is up and running all good.
		
				To test the redirect from the non-www version to the www version of the domain:
				-------------------------------------------------------------------------------

				Open a web browser and navigate to http://stapp03.stratos.xfusioncorp.com:8085
				
				The URL should automatically redirect to http://www.stapp03.stratos.xfusioncorp.com:8085
				
				Verify that the URL in the address bar shows the www version of the domain.
				
				To test the redirect from /blog/ to /news/:
				-------------------------------------------

				Open a web browser and navigate to http://www.stapp03.stratos.xfusioncorp.com:8085/blog/
				
				The URL should automatically redirect to http://www.stapp03.stratos.xfusioncorp.com:8085/news/
				
				Verify that the URL in the address bar shows the /news/ path instead of the /blog/ path.
				
				If both tests pass successfully, then the redirects have been set up correctly.

27) Add Response Headers in Apache :

We are working on hardening Apache web server on all app servers. As a part of this process we want to add some of the Apache response headers for security purpose. We are testing the settings one by one on all app servers. As per details mentioned below enable these headers for Apache:

Install httpd package on App Server 3 using yum and configure it to run on 6100 port, make sure to start its service.

Create an index.html file under Apache's default document root i.e /var/www/html and add below given content in it.

Welcome to the xFusionCorp Industries!

Configure Apache to enable below mentioned headers:

X-XSS-Protection header with value 1; mode=block

X-Frame-Options header with value SAMEORIGIN

X-Content-Type-Options header with value nosniff

Note: You can test using curl on the given app server as LBR URL will not work for this task.


Ans) Log into the App Server 3 using the command " ssh username@IPaddress/Hostname

		>> Install the httpd server using the command " sudo yum install httpd -y "
		>> To Run on the httpd server on 6100 port we need to add the port number 6100 in the " /etc/httpd/conf/httpd.conf file at Listen Section" 
		>> Enable the httpd services by running the command " sudo systemctl enable httpd "
		>> Restart the httpd services by running the command " sudo systemctl restart httpd"
		>> To Check the Status of the httpd services run the command " sudo systemctl status httpd "
		>> To Create the index.html file we need to move to the directory /var/www/html and run the command " sudo vi index.html " to create it and then add below html code and save the file by pressing " Esc :wq! "
				
				<!DOCTYPE html>
				<html>
				<head>
					<title>Welcome to the xFusionCorp Industries!</title>
				</head>
				<body>
					<h1>Welcome to the xFusionCorp Industries!</h1>
				</body>
				</html>
		
		>> To Configure Apache to enable below mentioned headers we need add it on "/etc/httpd/conf/httpd.conf" file.
		>> Once open the "/etc/httpd/conf/httpd.conf "  file search for <Directory  "/var/www/html"> add the header details at the bottom.  
		
			<Directory "/var/www/html">
				Header set X-XSS-Protection "1; mode=block"
				Header always append X-Frame-Options SAMEORIGIN
				Header set X-Content-Type-Options nosniff
			...
			</Directory>

		>> Save the file by pressing " Esc :wq! " and then Restart the httpd services by running the command " sudo systemctl restart httpd"
		>> Check the Status of the httpd services run the command " sudo systemctl status httpd "
		>> To check all the Configurations are working or not we can use command " curl -I http://localhost:6001 "
		>> You will get the response for curl command " curl -I http://localhost:6001 " as below 
		
				HTTP/1.1 200 OK
				Date: Thu, 30 Mar 2023 04:18:12 GMT
				Server: Apache/2.4.6 (CentOS)
				X-Frame-Options: SAMEORIGIN
				Last-Modified: Thu, 30 Mar 2023 04:08:32 GMT
				ETag: "a8-5f8163ef6e232"
				Accept-Ranges: bytes
				Content-Length: 168
				X-XSS-Protection: 1; mode=block
				X-Content-Type-Options: nosniff
				Content-Type: text/html; charset=UTF-8
	
		>> If you see above message means all the configurations are made Perfectly. 


28) Linux Bash Scripts:

The production support team of xFusionCorp Industries is working on developing some bash scripts to automate different day to day tasks. One is to create a bash script for taking websites backup. They have a static website running on App Server 1 in Stratos Datacenter, and they need to create a bash script named media_backup.sh which should accomplish the following tasks. (Also remember to place the script under /scripts directory on App Server 1)

a. Create a zip archive named xfusioncorp_media.zip of /var/www/html/media directory.

b. Save the archive in /backup/ on App Server 1. This is a temporary storage, as backups from this location will be clean on weekly basis. Therefore, we also need to save this backup archive on Nautilus Backup Server.

c. Copy the created archive to Nautilus Backup Server server in /backup/ location.

d. Please make sure script won't ask for password while copying the archive file. Additionally, the respective server user (for example, tony in case of App Server 1) must be able to run it.

Ans) Log into the App server 1 using the command " ssh username@IPaddress/Hostname "

		>> " Please make sure script won't ask for password while copying the archive file " means we need copy the ssh key to backup server 
		>> Run this commands in App server 1 " ssh-keygen ".
		>> Copy the key to the particular server using servername@ipaddress and password " ssh clint@stbkp01 " and enter the password.
		>> Now you can able to log into the Backup Server without Password by running the command " ssh clint@stbkp01 ". 
		>> Move to "/script" Directory and Create a file name "media_backup.sh".
		>> Change the permissions to the file "media_backup.sh" by running the command " sudo chmod 777 media_backup.sh "
		>> Open the file "media_backup.sh" in " vi mode " and Prepare the below script on the 


				#!/bin/bash

				#Defining the Variables

				ZIP_FOLDER="/var/www/html/media"
				ZIP_FILE="xfusioncorp_media.zip"
				DESTINATION_DIR="/backup/"

				#Creating the ZIP Archive

				zip -r ${ZIP_FILE} ${ZIP_FOLDER} > ${DESTINATION_DIR}/${ZIP_FILE}

				#Copying the files to the Backup Server

				scp /scripts/${ZIP_FILE} clint@stbkp01:${DESTINATION_DIR}/${ZIP_FILE}

				sudo chmod 777 ${ZIP_FILE}
				
		>> Run the "media_backup.sh" script by running the command ./media_backup.sh. 

29) Install a package
As per new application requirements shared by the Nautilus project development team, serveral new packages need to be installed on all app servers in Stratos Datacenter. Most of them are completed except for git.

Therefore, install the git package on all app-servers.

Ans) Log into app-servers by running the command " ssh username@IPaddress/hostname"
		>> To Install git run the command " sudo yum install git -y " on all app servers.
		>> Check the version of the git installed by running the command " git version "

30) Linux Configure sudo

We have some users on all app servers in Stratos Datacenter. Some of them have been assigned some new roles and responsibilities, therefore their users need to be upgraded with sudo access so that they can perform admin level tasks.

a. Provide sudo access to user ravi on all app servers.

b. Make sure you have set up password-less sudo for the user.

Ans) Log in to all the app servers by running the command " ssh username@hostname/IPaddress "
		>> Check if the user ravi is present or not by running the command " sudo cat /etc/passwd ". 
		>> Once you confirm the " user ravi " is present. Run the command " sudo visudo " and add " ravi ALL=(ALL) NOPASSWD:ALL " and save the file.
		>> To confirm whether the " user ravi " have the NOPASSWD authentication for sudo or not you can switch to " user ravi " by running the command " sudo su - ravi "
		>> Once you switched to " user ravi " run the command " sudo ls -lart /root " if it is not asking password we are sucessfully created password-less sudo access.

31) Setup SSL for Nginx

The system admins team of xFusionCorp Industries needs to deploy a new application on App Server 3 in Stratos Datacenter. They have some pre-requites to get ready that server for application deployment. Prepare the server as per requirements shared below:

Install and configure nginx on App Server 3.

On App Server 3 there is a self signed SSL certificate and key present at location /tmp/nautilus.crt and /tmp/nautilus.key. Move them to some appropriate location and deploy the same in Nginx.

Create an index.html file with content Welcome! under Nginx document root.

For final testing try to access the App Server 3 link (either hostname or IP) from jump host using curl command. For example curl -Ik https://<app-server-ip>/.

Ans) yum install epel-release -y
yum install nginx -y ;
systemctl start nginx ;
systemctl enable nginx
mkdir -vp /etc/nginx/ssl
mv /tmp/nautilus.crt /etc/nginx/ssl/
mv /tmp/nautilus.key /etc/nginx/ssl/
mkdir -vp /var/www/html
touch /var/www/html/index.html
echo 'Welcome!' | sudo tee /var/www/html/index.html
systemctl restart nginx ;
curl -Ik http:///
we will be able to access site.
Now uncomment below lines only in /etc/nginx/nginx.conf
Settings for a TLS enabled server.
server {                                                                                                     
    listen       443 ssl http2;                                                                              
    listen       [::]:443 ssl http2;                                                                         
    server_name  localhost;                                                                                  
    root         /var/www/html;    
    ssl_certificate "/etc/nginx/ssl/nautilus.crt;                                                            
    ssl_certificate_key "/etc/nginx/ssl/nautilus.key";   
}
systemctl restart nginx
curl -Ik https:///

32) Configure Local Yum repos

The Nautilus production support team and security team had a meeting last month in which they decided to use local yum repositories for maintaing packages needed for their servers. For now they have decided to configure a local yum repo on Nautilus Backup Server. This is one of the pending items from last month, so please configure a local yum repository on Nautilus Backup Server as per details given below.

a. We have some packages already present at location /packages/downloaded_rpms/ on Nautilus Backup Server.

b. Create a yum repo named local_yum and make sure to set Repository ID to local_yum. Configure it to use package's location /packages/downloaded_rpms/.

c. Install package samba from this newly created repo.

Ans) Create a directory to store the repository metadata. In this case, we will create a directory named "local_yum" under the "/etc/yum.repos.d/" directory.

sudo mkdir /etc/yum.repos.d/local_yum

Create a new repository configuration file for the local yum repository. You can use any text editor to create this file. For example, you can use the "vi" editor.

sudo vi /etc/yum.repos.d/local_yum/local_yum.repo

In the editor, add the following lines to the repository configuration file:

[local_yum]
name=Local Yum Repository
baseurl=file:///packages/downloaded_rpms/
enabled=1
gpgcheck=0

Here, we have set the "baseurl" to the location of the downloaded RPMs on Nautilus Backup Server, which is "/packages/downloaded_rpms/". We have also enabled the repository by setting "enabled" to 1, and disabled GPG checking by setting "gpgcheck" to 0.

Save and close the repository configuration file.

Update the yum repository metadata to make the local yum repository available for package installation.

sudo yum makecache --disablerepo=* --enablerepo=local_yum

Now, you can install the "samba" package from the local yum repository.

sudo yum install samba --enablerepo=local_yum

This will install the "samba" package from the local yum repository named "local_yum" on Nautilus Backup Server.
