The devops team of xFusionCorp Industries is working on to setup centralised logging management system to maintain and analyse server logs easily. Since it will take some time to implement, they wanted to gather some server logs on a regular basis. At least one of the app servers is having issues with the Apache server. The team needs Apache logs so that they can identify and troubleshoot the issues easily if they arise. So they decided to create a Jenkins job to collect logs from the server. Please create/configure a Jenkins job as per details mentioned below:



Click on the Jenkins button on the top bar to access the Jenkins UI. Login using username admin and password Adm!n321

1. Create a Jenkins jobs named copy-logs.

2. Configure it to periodically build every 9 minutes to copy the Apache logs (both access_log and error_logs) from App Server 2 (from default logs location) to location /usr/src/dba on Storage Server.

Note:

1. You might need to install some plugins and restart Jenkins service. So, we recommend clicking on Restart Jenkins when installation is complete and no jobs are running on plugin installation/update page i.e update centre. Also, Jenkins UI sometimes gets stuck when Jenkins service restarts in the back end. In this case please make sure to refresh the UI page.

2. Please make sure to define you cron expression like this */10 * * * * (this is just an example to run job every 10 minutes).

3. For these kind of scenarios requiring changes to be done in a web UI, please take screenshots so that you can share it with us for review in case your task is marked incomplete. You may also consider using a screen recording software such as loom.com to record and share your work.

Ans)
    ## Log into the App server 2
    1. ssh steve@stapp02

    ## Generate the sshkey
    2. ssh-keygen

    ## Copy the sshkey to the backup server
    3. ssh-copy-id natasha@ststor01

    ## Log in to the Jenkins UI
    4. username admin and password Adm!n321

    ## Add SSH plugin
    5. Manage Jenkins -> Manage plugins -> Available plugins -> select SSH, SSH Credentials, SSH Agent -> install -> Restart Jenkins when installation is complete and no jobs are running on plugin installation/update 

    ## Add SSH Login Credentials in the Jenkins Global Credentials
    6. Manage Jenkins -> Credentials -> System -> Global credentials (unrestricted) -> Add Credentials -> username: steve -> password: Am3ric@ -> Name of the Credentials: app-server2-cred -> save

    ## Add SSH Agent Details in the Configure System
    7. Dashboard -> Manage Jenkins -> Configure System -> SSH sites (SSH sites that projects will want to connect ) -> Hostname: stapp02 -> Port: 22 -> Credentials: peter (app-server2-cred)

    ## Create a New Jenkins Job
    8. Click on "New Item" to create a new job -> Enter a name for your job, such as "copy-logs" -> Select "Freestyle project" and click "OK"
    
    ## Configure the job
    9. Build periodically: */9 * * * * -> In the "Build" section, click on "Add build step" and select "Execute shell script on remote host using ssh" -> Select the Remote Server username and password stored earlier in the Jenkins -> In the command add the below lines

    #!/bin/bash
    scp -o StrictHostKeyChecking=no /var/log/httpd/* natasha@ststor01:/usr/src/dba

    ## Save the Job Configuration
    10. Scroll to the bottom of the page and click "Save."

    ## Build the Job 
    11. Click on the Build the Job -> Job will be successfully executed we can check that in the console output

    ## Verify the Appache 2 log file in the Storage server
    12. ssh natasha@ststor01 && cd /usr/src/dba && ls -larth ## you will see access_log, error_log file copied from App server 2 to Storage server