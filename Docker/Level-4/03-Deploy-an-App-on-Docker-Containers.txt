The Nautilus Application development team recently finished development of one of the apps that they want to deploy on a containerized platform. The Nautilus Application development and DevOps teams met to discuss some of the basic pre-requisites and requirements to complete the deployment. The team wants to test the deployment on one of the app servers before going live and set up a complete containerized stack using a docker compose fie. Below are the details of the task:



On App Server 1 in Stratos Datacenter create a docker compose file /opt/sysops/docker-compose.yml (should be named exactly).


The compose should deploy two services (web and DB), and each service should deploy a container as per details below:


For web service:


a. Container name must be php_host.


b. Use image php with any apache tag. Check here for more details.


c. Map php_host container's port 80 with host port 6100


d. Map php_host container's /var/www/html volume with host volume /var/www/html.


For DB service:


a. Container name must be mysql_host.


b. Use image mariadb with any tag (preferably latest). Check here for more details.


c. Map mysql_host container's port 3306 with host port 3306


d. Map mysql_host container's /var/lib/mysql volume with host volume /var/lib/mysql.


e. Set MYSQL_DATABASE=database_host and use any custom user ( except root ) with some complex password for DB connections.


After running docker-compose up you can access the app with curl command curl <server-ip or hostname>:6100/

For more details check here.


Note: Once you click on FINISH button, all currently running/stopped containers will be destroyed and stack will be deployed again using your compose file.

Ans) 
    # Log into app server 1 with ssh
    1. ssh tony@stapp01

    # Check the /opt/sysops/ directory present or not
    2. [tony@stapp01 sysops]$ ls -larth
       total 8.0K
       drwxr-xr-x 1 root root 4.0K Feb  5 01:55 ..
       drwxr-xr-x 2 root root 4.0K Feb  5 01:55 .

    # Write the docker-compose.yml file 
    3. [tony@stapp01 sysops]$ sudo vi docker-compose.yml

       We trust you have received the usual lecture from the local System
       Administrator. It usually boils down to these three things:
       
           #1) Respect the privacy of others.
           #2) Think before you type.
           #3) With great power comes great responsibility.
       
       [sudo] password for tony:

    version: '3.3'
    services:
        web:
            image: php:8.3.3RC1-apache
            container_name: php_host
            ports:
                - "6100:80"
            volumes:
                - /var/www/html:/var/www/html
            depends_on:
                - DB
        DB:
            image: mariadb
            container_name: mysql_host
            ports:
                - "3306:3306"
            volumes: 
                - /var/lib/mysql:/var/lib/mysql
            environment:
                MYSQL_DATABASE: database_host
                MYSQL_USER: mysqladmin
                MYSQL_PASSWORD: mysqladmin@123
	    		MARIADB_ROOT_PASSWORD: mysqlroot@123

    # build the docker-compose file
    4. [tony@stapp01 sysops]$ sudo docker-compose up -d
       Pulling web (php:8.3.3RC1-apache)...
       8.3.3RC1-apache: Pulling from library/php
       c57ee5000d61: Pulling fs layer
       c57ee5000d61: Downloading [>                                                  ]  298.2kB/
       c57ee5000d61: Pull complete
       e8c14b2bf4d5: Pull complete
       8ce454101f9e: Pull complete
       5cc00f80902c: Pull complete
       29b37124ca06: Pull complete
       e42f5ad5c25b: Pull complete
       ec8bff4ba880: Pull complete
       de2b330f5b26: Pull complete
       b87a7d38ba9d: Pull complete
       fdc82289af06: Pull complete
       252f9e17197c: Pull complete
       761f644014c7: Pull complete
       83d5797c8087: Pull complete
       Creating mysql_host ... done
       Creating php_host   ... done

    # Check the container are up and running or not
    5. [tony@stapp01 sysops]$ sudo docker-compose ps
          Name                 Command               State           Ports         
       ----------------------------------------------------------------------------
       mysql_host   docker-entrypoint.sh mariadbd    Up      0.0.0.0:3306->3306/tcp
       php_host     docker-php-entrypoint apac ...   Up      0.0.0.0:6100->80/tcp

    # Access the container using curl command
    6. [tony@stapp01 sysops]$ curl -k http://localhost:6100
       <html>
           <head>
               <title>Welcome to xFusionCorp Industries!</title>
           </head>
       
           <body>
               Welcome to xFusionCorp Industries!    </body>

    